apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: bcd
  labels:
    app: bcd
spec:
  template:
    metadata:
      labels:
        app: bcd
        tier: web
    spec:
      containers:
        - name: jetti
          image: eu.gcr.io/jetti-pg/jetti
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          # The following environment variables will contain the database host,
          # user and password to connect to the PostgreSQL instance.
          env:
            - name: POSTGRES_DB_JETTI_HOST
              value: db.jetti-app.com
            - name: POSTGRES_DB_ACCOUNTS_HOST
              value: 127.0.0.1:5432
            - name: POSTGRES_DB_NAME
              value: bcd
          # [START cloudsql_secrets]
            - name: POSTGRES_DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: POSTGRES_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: REDIS_DB_HOST
              value: redis-master
            - name: JTW_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-key
                  key: JTW_KEY
            - name: SUBSCRIPTION_ID
              value: 
            - name: FOR_GODS_SAKE_PLEASE_REDEPLOY
              value: 'воскресенье, 19 января 2018 г. 05:18:60 (EET)'
            # [END cloudsql_secrets]
        # [START proxy_container]
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                    "-instances=jetti-pg:europe-west3:jetti-pg=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
            - name: cloudsql
              mountPath: /cloudsql
         # [START proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: cloudsql
          emptyDir:
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
      # [END volumes]
---
apiVersion: v1
kind: Service
metadata:
  name: bcd
  labels:
    app: bcd
spec:
  type: NodePort
  selector:
    app: bcd
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: bcd-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: bcd
    kubernetes.io/ingress.allow-http: "false"
  labels:
    app: bcd
spec:
  tls:
  - secretName: jetti-ssl
  backend:
    serviceName: bcd
    servicePort: 8080
  rules:
  - host: bcd.jetti-app.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: bcd
          servicePort: 8080


#sed -ie "s/суббота, 13 января 2018 г. 21:31:39 (EET)/$(date)/g" add-account.yaml

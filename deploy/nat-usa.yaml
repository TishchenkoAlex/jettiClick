apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: jetti
  labels:
    app: jetti
spec:
  template:
    metadata:
      labels:
        app: jetti
        tier: web
    spec:
      containers:
        - name: jetti
          image: eu.gcr.io/jetti-pg/jetti
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              value: mssql
            - name: DB_NAME
              value: jetti-app
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: mssql-db-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mssql-db-credentials
                  key: password
            - name: DB_ACCOUNTS_HOST
              value: mssql
            - name: DB_ACCOUNTS_NAME
              value: accounts
            - name: DB_ACCOUNTS_USER
              valueFrom:
                secretKeyRef:
                  name: account-db-credentials
                  key: username
            - name: DB_ACCOUNTS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: account-db-credentials
                  key: password
            - name: REDIS_DB_HOST
              value: redis-master
            - name: REDIS_DB_PREFIX
              value: jetti
            - name: JTW_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-key
                  key: JTW_KEY
            - name: REFRESH_ID
              value: "38"            
            - name: NODE_ENV
              value: "production"
            - name: SUBSCRIPTION_ID
              value: 
---
apiVersion: v1
kind: Service
metadata:
  name: jetti
  labels:
    app: jetti
spec:
  type: NodePort
  selector:
    app: jetti
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jetti
  annotations:
    kubernetes.io/ingress.global-static-ip-name: jetti-ip
    kubernetes.io/ingress.allow-http: "false"
  labels:
    app: jetti
spec:
  tls:
  - secretName: jetti-ssl
  backend:
    serviceName: jetti
    servicePort: 8080
#sed -ie "s/суббота, 13 января 2018 г. 21:31:39 (EET)/$(date)/g" add-account.yaml
#kubectl create secret generic mssql-db-credentials --from-literal=username=yuralex --from-literal=password=MyNew01Password
#kubectl apply -f nat-usa.yaml
apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Service
    metadata:
      name: nginx-ingress
    spec:
      type: LoadBalancer
      loadBalancerIP: 10.10.10.10  # static IP pre-allocated.
      ports:
        - port: 80
          name: http
        - port: 443
          name: https
      selector:
        k8s-app: nginx-ingress-lb
  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: nginx-ingress-controller
    spec:
      replicas: 1
      revisionHistoryLimit: 3
      template:
        metadata:
          labels:
            k8s-app: nginx-ingress-lb
        spec:
          terminationGracePeriodSeconds: 60
          containers:
            - name: nginx-ingress-controller
              # From https://github.com/kubernetes/contrib/blob/master/ingress/controllers/nginx/rc.yaml
              image: gcr.io/google_containers/nginx-ingress-controller:0.8.3
              imagePullPolicy: Always
              args:
                - /nginx-ingress-controller
                # Ingress controller redirects to the given server for any unknown subdomain, can be any but:
                # - Should serve a HTTP/404 on /
                # - Must serve a HTTP/200 on /healthz
                - --default-backend-service=default/frontend
              # Use downward API
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              ports:
                - containerPort: 80
                - containerPort: 443
              volumeMounts:  # Optional
                - name: tls-dhparam-vol
                  mountPath: /etc/nginx-ssl/dhparam
              livenessProbe:  # Optional
                httpGet:
                  path: /healthz
                  port: 10254
                  scheme: HTTP
                initialDelaySeconds: 30
                timeoutSeconds: 5
              resources:  # Optional
                requests:
                  memory: "10Mi"
                limits:
                  memory: "100Mi"
          volumes:  # Optional
            - name: tls-dhparam-vol
              secret:
                secretName: tls-dhparam
  - apiVersion: extensions/v1beta1
    kind: Ingress
    metadata:
      name: ingress
      annotations:
        # This tells to only use the Nginx Ingress Controller
        # and avoids the creation on a Global LoadBalancer on GKE.
        kubernetes.io/ingress.class: "nginx"
    spec:
      tls:
        - secretName: tls-certificate
          # List of hosts supported by this certificate:
          hosts:
            - example.com
            - foo.example.com
      rules:
        - host: example.com
          http:
            paths:
              - path: /
                backend:
                  serviceName: frontend
                  servicePort: 80
        - host: foo.example.com
          http:
            paths:
              - path: /media
                backend:
                  serviceName: my-other-service-name
                  servicePort: 80